---
name: Container
on:
  workflow_dispatch: null
  workflow_run:
    workflows:
      - Integration
    types:
      - completed
    branches:
      - master
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true
env:
  PYTHON_VERSION: "3.13"
jobs:
  build-base:
    if: >
      (github.repository_owner == 'Keshav25' &&
      github.event.workflow_run.conclusion == 'success')

      || github.event_name == 'workflow_dispatch'
    name: Build base
    runs-on: ubuntu-24.04
    steps:
      - if: github.repository_owner == 'Keshav25'
        name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          persist-credentials: "false"
      - if: github.repository_owner == 'Keshav25'
        name: Get date
        id: date
        run: echo "date=$(date +'%Y%m%d')" >>$GITHUB_OUTPUT
      - if: github.repository_owner == 'Keshav25'
        name: Check cache apko
        id: cache-apko
        uses: actions/cache/restore@0400d5f644dc74513175e3cd8d07132dd4860809
        with:
          key: apko-${{ steps.date.outputs.date }}-${{ hashFiles('./container/base.yml',
            './container/base-builder.yml') }}
          path: /tmp/.apko/
          lookup-only: true
      - if: github.repository_owner == 'Keshav25' && steps.cache-apko.outputs.cache-hit
          != 'true'
        name: Setup cache apko
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809
        with:
          key: apko-${{ steps.date.outputs.date }}-${{ hashFiles('./container/base.yml',
            './container/base-builder.yml') }}
          restore-keys: apko-${{ steps.date.outputs.date }}-
          path: /tmp/.apko/
      - if: github.repository_owner == 'Keshav25' && steps.cache-apko.outputs.cache-hit
          != 'true'
        name: Setup apko
        run: |
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          brew install apko
  build:
    if: github.repository_owner == 'Keshav25' || github.event_name ==
      'workflow_dispatch'
    name: Build (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    needs: build-base
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        include:
          - arch: amd64
            os: ubuntu-24.04
            emulation: false
    outputs:
      docker_tag: ${{ steps.build.outputs.docker_tag }}
      git_url: ${{ steps.build.outputs.git_url }}
    steps:
      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          persist-credentials: "false"
      - name: Setup cache Python
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809
        with:
          key: python-${{ env.PYTHON_VERSION }}-${{ runner.arch }}-${{
            hashFiles('./requirements*.txt') }}
          restore-keys: python-${{ env.PYTHON_VERSION }}-${{ runner.arch }}-
          path: ./local/
      - name: Restore cache container mounts
        id: cache-container-mounts
        uses: actions/cache/restore@0400d5f644dc74513175e3cd8d07132dd4860809
        with:
          key: container-mounts-${{ hashFiles('./container/*.dockerfile') }}
          restore-keys: container-mounts-
          path: |
            /var/tmp/buildah-cache/
            /var/tmp/buildah-cache-*/
      - if: steps.cache-container-mounts.outputs.cache-hit == 'true'
        name: Clean key cache container mounts
        continue-on-error: true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh cache delete container-mounts-${{ hashFiles('./container/*.dockerfile')
          }}
      - if: ${{ matrix.emulation }}
        name: Setup QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392
      - name: Build
        id: build
        env:
          OVERRIDE_ARCH: ${{ matrix.arch }}
        run: make podman.build
      - name: Save Docker image as tarball
        run: |
          docker save searxng:latest -o searxng-amd64.tar
      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: searxng-amd64-image
          path: searxng-amd64.tar
      - if: always()
        name: Save cache container mounts
        uses: actions/cache/save@0400d5f644dc74513175e3cd8d07132dd4860809
        with:
          key: container-mounts-${{ hashFiles('./container/*.dockerfile') }}
          path: |
            /var/tmp/buildah-cache/
            /var/tmp/buildah-cache-*/
  test:
    name: Test (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: amd64
            os: ubuntu-24.04
            emulation: false
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          persist-credentials: "false"
      - if: ${{ matrix.emulation }}
        name: Setup QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392
      - name: Test
        env:
          OVERRIDE_ARCH: ${{ matrix.arch }}
          GIT_URL: ${{ needs.build.outputs.git_url }}
        run: make container.test
